{"programModules":{"EXT001MI":{"program":"EXT001MI","triggers":{},"transactions":{"GenPickingList":{"sourceUuid":"9fb0d7fe-0796-4803-9476-1366ccc20bc8","name":"GenPickingList","program":"EXT001MI","description":"GenPickingList","active":true,"multi":true,"modified":1723883226242,"modifiedBy":"INFNIXONG","outputFields":[{"name":"TEXT","description":"text","length":600,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"company","length":3,"mandatory":false,"type":"N"},{"name":"DLIX","description":"delivery number","length":11,"mandatory":false,"type":"N"},{"name":"CONN","description":"shipment","length":7,"mandatory":false,"type":"N"}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"9fb0d7fe-0796-4803-9476-1366ccc20bc8":{"uuid":"9fb0d7fe-0796-4803-9476-1366ccc20bc8","updated":1724928404648,"updatedBy":"INFNIXONG","created":1723624243400,"createdBy":"INFNIXONG","apiVersion":"0.21","beVersion":"16.0.0.20240621022400.6","language":"GROOVY","codeHash":"894C547C22E956750789179DDDE16DE0E08D492E69163996CB21D373277784E2","code":""}}}