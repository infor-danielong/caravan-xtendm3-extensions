{"programModules":{"EXT001MI":{"program":"EXT001MI","triggers":{},"transactions":{"GenDelNote":{"sourceUuid":"5eaa3593-f2db-4c8d-a3e9-0439186d4c02","name":"GenDelNote","program":"EXT001MI","description":"GenPickingList","active":true,"multi":true,"modified":1723825429132,"modifiedBy":"INFNIXONG","outputFields":[{"name":"TEXT","description":"text","length":600,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"company","length":3,"mandatory":false,"type":"N"},{"name":"DLIX","description":"delivery number","length":11,"mandatory":false,"type":"N"},{"name":"CONN","description":"shipment","length":7,"mandatory":false,"type":"N"}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"5eaa3593-f2db-4c8d-a3e9-0439186d4c02":{"uuid":"5eaa3593-f2db-4c8d-a3e9-0439186d4c02","updated":1724928395296,"updatedBy":"INFNIXONG","created":1723624780308,"createdBy":"INFNIXONG","apiVersion":"0.21","beVersion":"16.0.0.20240621022400.6","language":"GROOVY","codeHash":"B4116A16163C5C49B820B4955F5C5D4E0151943CA4761CBEA6D3E3C0E7D4BFED","code":""}}}