{"programModules":{"CREXTPRT":{"program":"CREXTPRT","triggers":{"ExtendOutputARS199PF":{"name":"ExtendOutputARS199PF","method":"extendOutput","advice":"POST","active":true,"modified":1723887885359,"modifiedBy":"INFNIXONG","sourceUuid":"948759df-5694-4ccf-8120-f90709443c42","programName":"CREXTPRT","utilities":[],"type":"METHOD","priority":500,"market":"ALL"}},"transactions":{},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"948759df-5694-4ccf-8120-f90709443c42":{"uuid":"948759df-5694-4ccf-8120-f90709443c42","updated":1724929804144,"updatedBy":"INFDANONG","created":1723716994440,"createdBy":"INFNIXONG","apiVersion":"0.21","beVersion":"16.0.0.20240621022400.6","language":"GROOVY","codeHash":"5A86DC233653401B1CB561DA2AF3A90E7128BA702446D5D6DAC8302D5002BB9E","code":""}}}